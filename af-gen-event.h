// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __AF_GEN_EVENT__
#define __AF_GEN_EVENT__


// Code used to configure the cluster event mechanism
#define EMBER_AF_GENERATED_EVENT_CODE \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl1; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl1; \
  EmberEventControl emberAfIasZoneClusterServerTickCallbackControl1; \
  extern EmberEventControl emberAfPluginFormAndJoinCleanupEventControl; \
  extern EmberEventControl emberAfPluginIasZoneServerManageQueueEventControl; \
  extern EmberEventControl emberAfPluginNetworkSteeringFinishSteeringEventControl; \
  extern EmberEventControl emberAfPluginOtaStorageSimpleEepromPageEraseEventControl; \
  extern EmberEventControl emberAfPluginReportingTickEventControl; \
  extern EmberEventControl emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl; \
  extern EmberEventControl ikkNetJoinFaild1EventControl; \
  extern EmberEventControl ikkNetJoinFaild2EventControl; \
  extern EmberEventControl ikkRttMsgDispatchEventControl; \
  extern EmberEventControl ikkRttRecvLoopCheckEventControl; \
  extern EmberEventControl ikkRttSentLoopCheckEventControl; \
  extern EmberEventControl ikkUartMsgDispatchEventControl; \
  extern EmberEventControl ikkUartRecvLoopCheckEventControl; \
  extern EmberEventControl ikkUartSentLoopCheckEventControl; \
  extern EmberEventControl kConnectDelayReportEventControl; \
  extern EmberEventControl kDelaySetLedStatusEventControl; \
  extern EmberEventControl kFactoryTestEventControl; \
  extern EmberEventControl kGetBatteryVoltageEventControl; \
  extern EmberEventControl kNwkRejoinProcedureEventControl; \
  extern EmberEventControl kOptTunnelMtoRRDelayRspEventControl; \
  extern EmberEventControl kSetFirstJionFlgEventControl; \
  extern EmberEventControl kTickEventControl; \
  extern EmberEventControl kUserJoinSucceedProcedureEventControl; \
  extern EmberEventControl kkDelaySendMfgMsgEventControl; \
  extern EmberEventControl kkMfglibStartEventControl; \
  extern EmberEventControl kkMfglibStopEventControl; \
  extern EmberEventControl kkMfglibWaitReceiveEventControl; \
  extern EmberEventControl kkSystemSetUpEventControl; \
  extern void emberAfPluginFormAndJoinCleanupEventHandler(void); \
  extern void emberAfPluginIasZoneServerManageQueueEventHandler(void); \
  extern void emberAfPluginNetworkSteeringFinishSteeringEventHandler(void); \
  extern void emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler(void); \
  extern void emberAfPluginReportingTickEventHandler(void); \
  extern void emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler(void); \
  extern void ikkNetJoinFaild1EventHandler(void); \
  extern void ikkNetJoinFaild2EventHandler(void); \
  extern void ikkRttMsgDispatchEventHandler(void); \
  extern void ikkRttRecvLoopCheckEventHandler(void); \
  extern void ikkRttSentLoopCheckEventHandler(void); \
  extern void ikkUartMsgDispatchEventHandler(void); \
  extern void ikkUartRecvLoopCheckEventHandler(void); \
  extern void ikkUartSentLoopCheckEventHandler(void); \
  extern void kConnectDelayReportEventHandler(void); \
  extern void kDelaySetLedStatusEventHandler(void); \
  extern void kFactoryTestEventHandler(void); \
  extern void kGetBatteryVoltageEventHandler(void); \
  extern void kNwkRejoinProcedureEventHandler(void); \
  extern void kOptTunnelMtoRRDelayRspEventHandler(void); \
  extern void kSetFirstJionFlgEventHandler(void); \
  extern void kTickEventHandler(void); \
  extern void kUserJoinSucceedProcedureEventHandler(void); \
  extern void kkDelaySendMfgMsgEventHandler(void); \
  extern void kkMfglibStartEventHandler(void); \
  extern void kkMfglibStopEventHandler(void); \
  extern void kkMfglibWaitReceiveEventHandler(void); \
  extern void kkSystemSetUpEventHandler(void); \
  static void networkEventWrapper(EmberEventControl *control, EmberAfNetworkEventHandler handler, uint8_t networkIndex) \
  { \
    emberAfPushNetworkIndex(networkIndex); \
    emberEventControlSetInactive(*control); \
    (*handler)(); \
    emberAfPopNetworkIndex(); \
  } \
  EmberEventControl emberAfPluginEndDeviceSupportMoveNetworkEventControls[1]; \
  extern void emberAfPluginEndDeviceSupportMoveNetworkEventHandler(void); \
  void emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginEndDeviceSupportMoveNetworkEventControls[0], emberAfPluginEndDeviceSupportMoveNetworkEventHandler, 0); } \
  EmberEventControl emberAfPluginEndDeviceSupportPollingNetworkEventControls[1]; \
  extern void emberAfPluginEndDeviceSupportPollingNetworkEventHandler(void); \
  void emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginEndDeviceSupportPollingNetworkEventControls[0], emberAfPluginEndDeviceSupportPollingNetworkEventHandler, 0); } \
  EmberEventControl emberAfPluginScanDispatchScanNetworkEventControls[1]; \
  extern void emberAfPluginScanDispatchScanNetworkEventHandler(void); \
  void emberAfPluginScanDispatchScanNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginScanDispatchScanNetworkEventControls[0], emberAfPluginScanDispatchScanNetworkEventHandler, 0); } \
  static void clusterTickWrapper(EmberEventControl *control, EmberAfTickFunction callback, uint8_t endpoint) \
  { \
    emberAfPushEndpointNetworkIndex(endpoint); \
    emberEventControlSetInactive(*control); \
    (*callback)(endpoint); \
    emberAfPopNetworkIndex(); \
  } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallback, 1); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallback, 1); } \
  void emberAfIasZoneClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfIasZoneClusterServerTickCallbackControl1, emberAfIasZoneClusterServerTickCallback, 1); } \


// EmberEventData structs used to populate the EmberEventData table
#define EMBER_AF_GENERATED_EVENTS   \
  { &emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1 }, \
  { &emberAfIasZoneClusterServerTickCallbackControl1, emberAfIasZoneClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfPluginFormAndJoinCleanupEventControl, emberAfPluginFormAndJoinCleanupEventHandler }, \
  { &emberAfPluginIasZoneServerManageQueueEventControl, emberAfPluginIasZoneServerManageQueueEventHandler }, \
  { &emberAfPluginNetworkSteeringFinishSteeringEventControl, emberAfPluginNetworkSteeringFinishSteeringEventHandler }, \
  { &emberAfPluginOtaStorageSimpleEepromPageEraseEventControl, emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler }, \
  { &emberAfPluginReportingTickEventControl, emberAfPluginReportingTickEventHandler }, \
  { &emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl, emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler }, \
  { &ikkNetJoinFaild1EventControl, ikkNetJoinFaild1EventHandler }, \
  { &ikkNetJoinFaild2EventControl, ikkNetJoinFaild2EventHandler }, \
  { &ikkRttMsgDispatchEventControl, ikkRttMsgDispatchEventHandler }, \
  { &ikkRttRecvLoopCheckEventControl, ikkRttRecvLoopCheckEventHandler }, \
  { &ikkRttSentLoopCheckEventControl, ikkRttSentLoopCheckEventHandler }, \
  { &ikkUartMsgDispatchEventControl, ikkUartMsgDispatchEventHandler }, \
  { &ikkUartRecvLoopCheckEventControl, ikkUartRecvLoopCheckEventHandler }, \
  { &ikkUartSentLoopCheckEventControl, ikkUartSentLoopCheckEventHandler }, \
  { &kConnectDelayReportEventControl, kConnectDelayReportEventHandler }, \
  { &kDelaySetLedStatusEventControl, kDelaySetLedStatusEventHandler }, \
  { &kFactoryTestEventControl, kFactoryTestEventHandler }, \
  { &kGetBatteryVoltageEventControl, kGetBatteryVoltageEventHandler }, \
  { &kNwkRejoinProcedureEventControl, kNwkRejoinProcedureEventHandler }, \
  { &kOptTunnelMtoRRDelayRspEventControl, kOptTunnelMtoRRDelayRspEventHandler }, \
  { &kSetFirstJionFlgEventControl, kSetFirstJionFlgEventHandler }, \
  { &kTickEventControl, kTickEventHandler }, \
  { &kUserJoinSucceedProcedureEventControl, kUserJoinSucceedProcedureEventHandler }, \
  { &kkDelaySendMfgMsgEventControl, kkDelaySendMfgMsgEventHandler }, \
  { &kkMfglibStartEventControl, kkMfglibStartEventHandler }, \
  { &kkMfglibStopEventControl, kkMfglibStopEventHandler }, \
  { &kkMfglibWaitReceiveEventControl, kkMfglibWaitReceiveEventHandler }, \
  { &kkSystemSetUpEventControl, kkSystemSetUpEventHandler }, \
  { &emberAfPluginEndDeviceSupportMoveNetworkEventControls[0], emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0 }, \
  { &emberAfPluginEndDeviceSupportPollingNetworkEventControls[0], emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0 }, \
  { &emberAfPluginScanDispatchScanNetworkEventControls[0], emberAfPluginScanDispatchScanNetworkEventWrapper0 }, \


#define EMBER_AF_GENERATED_EVENT_STRINGS   \
  "Identify Cluster Server EP 1",  \
  "Over the Air Bootloading Cluster Client EP 1",  \
  "IAS Zone Cluster Server EP 1",  \
  "Form and Join Library Plugin Cleanup",  \
  "IAS Zone Server Plugin ManageQueue",  \
  "Network Steering Plugin FinishSteering",  \
  "OTA Simple Storage EEPROM Driver Plugin PageErase",  \
  "Reporting Plugin Tick",  \
  "Update TC Link Key Plugin BeginTcLinkKeyUpdate",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "Event data",  \
  "End Device Support Plugin Move NWK 0", \
  "End Device Support Plugin Polling NWK 0", \
  "Scan Dispatch Plugin Scan NWK 0", \


// The length of the event context table used to track and retrieve cluster events
#define EMBER_AF_EVENT_CONTEXT_LENGTH 3

// EmberAfEventContext structs used to populate the EmberAfEventContext table
#define EMBER_AF_GENERATED_EVENT_CONTEXT { 0x1, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl1}, \
{ 0x1, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl1}, \
{ 0x1, 0x500, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIasZoneClusterServerTickCallbackControl1}


#endif // __AF_GEN_EVENT__
